#!/bin/bash

# ============================================================================
# Mission Module - Gestion des missions et de leur cycle de vie
# ============================================================================

readonly DIFFICULTIES=("Easy" "Medium" "Hard")

# Th√®mes par activit√© et difficult√©
declare -A CVE_THEMES_EASY=(
  ["1"]="Analyser 1 CVE r√©cente (score CVSS < 7)"
  ["2"]="Documenter une vuln√©rabilit√© web basique"
  ["3"]="Rechercher des CVE dans un logiciel sp√©cifique"
)

declare -A CVE_THEMES_MEDIUM=(
  ["1"]="Analyser 2-3 CVE critiques (score CVSS > 7)"
  ["2"]="Cr√©er un rapport d√©taill√© d'une CVE avec POC"
  ["3"]="Comparer l'√©volution d'une famille de vuln√©rabilit√©s"
)

declare -A CVE_THEMES_HARD=(
  ["1"]="Analyser 3-5 CVE avec cha√Æne d'exploitation"
  ["2"]="R√©diger un guide de mitigation complet"
  ["3"]="Analyser l'impact d'une CVE sur plusieurs syst√®mes"
)

declare -A MALWARE_THEMES_EASY=(
  ["1"]="Analyse statique basique d'un malware connu"
  ["2"]="Identifier les IoC d'un √©chantillon simple"
  ["3"]="Documenter le comportement d'un adware"
)

declare -A MALWARE_THEMES_MEDIUM=(
  ["1"]="Reverse engineering d'un trojan"
  ["2"]="Analyse dynamique avec sandbox"
  ["3"]="D√©crypter la communication C&C"
)

declare -A MALWARE_THEMES_HARD=(
  ["1"]="Analyse compl√®te d'un APT sophistiqu√©"
  ["2"]="D√©sobfuscation et unpacking avanc√©"
  ["3"]="D√©velopper des signatures de d√©tection"
)

declare -A CTF_THEMES_EASY=(
  ["1"]="R√©soudre 3-5 challenges Web faciles"
  ["2"]="Challenges de cryptographie basique"
  ["3"]="Forensics sur des fichiers simples"
)

declare -A CTF_THEMES_MEDIUM=(
  ["1"]="R√©soudre 2-3 challenges de reverse engineering"
  ["2"]="Pwn de binaires avec protections basiques"
  ["3"]="St√©ganographie et forensics avanc√©s"
)

declare -A CTF_THEMES_HARD=(
  ["1"]="Exploitation de vuln√©rabilit√©s 0-day"
  ["2"]="Reverse engineering de malware obfusqu√©"
  ["3"]="Challenges de cryptanalyse avanc√©e"
)

declare -A VEILLE_THEMES_EASY=(
  ["1"]="R√©sum√© des actualit√©s cyber de la semaine"
  ["2"]="Analyser 3 nouvelles techniques d'attaque"
  ["3"]="Veille sur un secteur sp√©cifique (sant√©, finance...)"
)

declare -A VEILLE_THEMES_MEDIUM=(
  ["1"]="Rapport d√©taill√© sur une campagne APT r√©cente"
  ["2"]="Analyse des tendances cyber du mois"
  ["3"]="√âtude comparative d'outils de s√©curit√©"
)

declare -A VEILLE_THEMES_HARD=(
  ["1"]="Analyse g√©opolitique des cybermenaces"
  ["2"]="Pr√©dictions et prospective cybers√©curit√©"
  ["3"]="Rapport strat√©gique pour d√©cideurs"
)

# ============================================================================
# V√©rification de mission unique
# ============================================================================

mission_check_unique() {
  local mission_data
  mission_data=$(config_get_current_mission)

  if [[ "$mission_data" != "null" ]] && [[ -n "$mission_data" ]]; then
    local activity difficulty start_time duration
    activity=$(echo "$mission_data" | jq -r '.activity')
    difficulty=$(echo "$mission_data" | jq -r '.difficulty // "Unknown"')
    start_time=$(echo "$mission_data" | jq -r '.start_time')
    duration=$(echo "$mission_data" | jq -r '.duration')

    local current_time elapsed remaining
    current_time=$(date +%s)
    elapsed=$((current_time - start_time))
    remaining=$((duration - elapsed))

    ui_error "Mission d√©j√† en cours !"
    echo

    if [[ $remaining -gt 0 ]]; then
      local remaining_formatted
      remaining_formatted=$(format_time $remaining)
      ui_current_mission "$activity" "$difficulty" "$remaining_formatted"
    else
      ui_warning "‚è∞ Mission en cours (temps √©coul√©)"
      ui_current_mission "$activity" "$difficulty" "TEMPS √âCOUL√â"
    fi

    echo
    ui_info "Terminez d'abord votre mission actuelle avec 'learning-check'"
    ui_info "Ou annulez-la avec 'learning-emergency'"

    return 1
  fi

  return 0
}

# ============================================================================
# G√©n√©ration de missions par type
# ============================================================================

mission_create() {
  local activity=$1

  # V√©rifier qu'aucune mission n'est en cours
  if ! mission_check_unique; then
    return 1
  fi

  case "$activity" in
  "Challenge TryHackMe")
    mission_create_tryhackme
    ;;
  "Documentation CVE")
    mission_create_themed "CVE" "Documentation CVE"
    ;;
  "Analyse de malware")
    mission_create_themed "MALWARE" "Analyse de malware"
    ;;
  "CTF Practice")
    mission_create_themed "CTF" "CTF Practice"
    ;;
  "Veille s√©curit√©")
    mission_create_themed "VEILLE" "Veille s√©curit√©"
    ;;
  *)
    ui_error "Type d'activit√© non support√©: $activity"
    return 1
    ;;
  esac
}

mission_create_tryhackme() {
  # Pour TryHackMe, on garde le syst√®me al√©atoire
  local difficulty
  difficulty=$(mission_get_random_difficulty)

  local duration
  duration=$(config_get_duration "$difficulty")

  local time_formatted
  time_formatted=$(format_time "$duration")

  echo
  ui_mission_box "Challenge TryHackMe" "$difficulty" "$time_formatted"
  echo

  if ui_confirm "Accepter cette mission ?"; then
    mission_start "Challenge TryHackMe" "$difficulty" "$duration" ""
  else
    mission_handle_refusal "Challenge TryHackMe" "$difficulty" "$duration" ""
  fi
}

mission_create_themed() {
  local theme_type=$1
  local activity_name=$2

  echo
  echo -e "${CYAN}Choisissez la difficult√© pour $activity_name :${NC}"
  echo

  local difficulty
  difficulty=$(gum choose \
    --cursor="‚û§ " \
    --selected.foreground="#00ff00" \
    "Easy (2h)" \
    "Medium (3h)" \
    "Hard (4h)")

  # Extraire juste la difficult√©
  local diff_level
  case "$difficulty" in
  "Easy (2h)") diff_level="Easy" ;;
  "Medium (3h)") diff_level="Medium" ;;
  "Hard (4h)") diff_level="Hard" ;;
  *)
    ui_error "Difficult√© non reconnue"
    return 1
    ;;
  esac

  # Obtenir un th√®me al√©atoire pour cette difficult√©
  local theme
  theme=$(mission_get_random_theme "$theme_type" "$diff_level")

  local duration
  duration=$(config_get_duration "$diff_level")

  local time_formatted
  time_formatted=$(format_time "$duration")

  echo
  ui_themed_mission_box "$activity_name" "$diff_level" "$time_formatted" "$theme"
  echo

  if ui_confirm "Accepter cette mission ?"; then
    mission_start "$activity_name" "$diff_level" "$duration" "$theme"
  else
    mission_handle_themed_refusal "$activity_name" "$diff_level" "$duration" "$theme"
  fi
}

mission_get_random_theme() {
  local theme_type=$1
  local difficulty=$2

  local -n themes_ref="${theme_type}_THEMES_${difficulty^^}"
  local theme_keys=(${!themes_ref[@]})
  local random_key=${theme_keys[$((RANDOM % ${#theme_keys[@]}))]}

  echo "${themes_ref[$random_key]}"
}

# ============================================================================
# Gestion des refus avec joker
# ============================================================================

mission_handle_refusal() {
  local activity=$1
  local difficulty=$2
  local duration=$3
  local theme=$4

  if [[ "$(config_is_joker_available)" == "true" ]]; then
    echo
    ui_joker_available
    echo

    if ui_confirm "Utiliser votre joker quotidien pour changer de mission ?"; then
      config_use_joker
      if [[ "$activity" == "Challenge TryHackMe" ]]; then
        mission_create_tryhackme
      else
        # Reg√©n√©rer avec un nouveau th√®me
        case "$activity" in
        "Documentation CVE") mission_create_themed "CVE" "$activity" ;;
        "Analyse de malware") mission_create_themed "MALWARE" "$activity" ;;
        "CTF Practice") mission_create_themed "CTF" "$activity" ;;
        "Veille s√©curit√©") mission_create_themed "VEILLE" "$activity" ;;
        esac
      fi
    else
      mission_force_accept "$activity" "$difficulty" "$duration" "$theme"
    fi
  else
    ui_error "Joker quotidien d√©j√† utilis√© !"
    ui_warning "Vous devez accepter cette mission ou quitter."
    echo

    if ui_confirm "Forcer l'acceptation de la mission ?"; then
      mission_start "$activity" "$difficulty" "$duration" "$theme"
    else
      ui_info "Mission annul√©e. Session ferm√©e."
      exit 0
    fi
  fi
}

mission_handle_themed_refusal() {
  mission_handle_refusal "$@"
}

mission_force_accept() {
  local activity=$1
  local difficulty=$2
  local duration=$3
  local theme=$4

  ui_warning "Aucun joker disponible. Cette mission sera forc√©e."

  if ui_confirm "Continuer quand m√™me ?"; then
    mission_start "$activity" "$difficulty" "$duration" "$theme"
  else
    ui_info "Session ferm√©e."
    exit 0
  fi
}

# ============================================================================
# D√©marrage des missions
# ============================================================================

mission_start() {
  local activity=$1
  local difficulty=$2
  local duration=$3
  local theme=${4:-""}

  # Sauvegarder la mission avec le th√®me
  config_save_mission "$activity" "$difficulty" "$duration" "$theme"

  # Lancer le timer
  timer_start "$duration"

  # Affichage de confirmation
  ui_clear
  ui_header "Mission Lanc√©e"

  local time_formatted
  time_formatted=$(format_time "$duration")

  if [[ -n "$theme" ]]; then
    ui_box "üöÄ MISSION ACTIVE AVEC TH√àME" \
      "üìã $activity|‚ö° Difficult√©: $difficulty|‚è∞ Temps: $time_formatted||üéØ Th√®me: $theme||üí™ Bon travail !" \
      "#00FF00"
  else
    ui_box "üöÄ MISSION ACTIVE" \
      "üìã $activity|‚ö° Difficult√©: $difficulty|‚è∞ Temps: $time_formatted||üí™ Bon travail !" \
      "#00FF00"
  fi

  echo
  ui_success "Mission d√©marr√©e ! Timer en cours d'ex√©cution."
  ui_info "Utilisez 'learning-check' pour valider ou 'learning-status' pour voir le statut."

  ui_wait
}

# ============================================================================
# Affichage des missions
# ============================================================================

mission_display_current() {
  local mission_data
  mission_data=$(config_get_current_mission)

  if [[ "$mission_data" == "null" ]] || [[ -z "$mission_data" ]]; then
    return 0
  fi

  local activity difficulty start_time duration status theme
  activity=$(echo "$mission_data" | jq -r '.activity')
  difficulty=$(echo "$mission_data" | jq -r '.difficulty')
  start_time=$(echo "$mission_data" | jq -r '.start_time')
  duration=$(echo "$mission_data" | jq -r '.duration')
  status=$(echo "$mission_data" | jq -r '.status // "active"')
  theme=$(echo "$mission_data" | jq -r '.theme // ""')

  if [[ "$status" == "active" ]]; then
    local current_time elapsed remaining
    current_time=$(date +%s)
    elapsed=$((current_time - start_time))
    remaining=$((duration - elapsed))

    if [[ $remaining -gt 0 ]]; then
      local remaining_formatted
      remaining_formatted=$(format_time $remaining)

      if [[ -n "$theme" && "$theme" != "null" ]]; then
        ui_current_mission_with_theme "$activity" "$difficulty" "$remaining_formatted" "$theme"
      else
        ui_current_mission "$activity" "$difficulty" "$remaining_formatted"
      fi
    else
      ui_warning "‚è∞ Temps √©coul√© ! Mission en attente de validation."
      echo
    fi
  fi
}

# ============================================================================
# Validation et compl√©tion
# ============================================================================

mission_validate() {
  local mission_data
  mission_data=$(config_get_current_mission)

  if [[ "$mission_data" == "null" ]] || [[ -z "$mission_data" ]]; then
    ui_error "Aucune mission active √† valider"
    return 1
  fi

  local activity difficulty start_time duration theme
  activity=$(echo "$mission_data" | jq -r '.activity')
  difficulty=$(echo "$mission_data" | jq -r '.difficulty')
  start_time=$(echo "$mission_data" | jq -r '.start_time')
  duration=$(echo "$mission_data" | jq -r '.duration')
  theme=$(echo "$mission_data" | jq -r '.theme // ""')

  local current_time elapsed
  current_time=$(date +%s)
  elapsed=$((current_time - start_time))

  ui_header "Validation de Mission"

  local validation_content="Activit√©: $activity|Difficult√©: $difficulty|Temps √©coul√©: $(format_time $elapsed)"
  if [[ -n "$theme" && "$theme" != "null" ]]; then
    validation_content+="|Th√®me: $theme"
  fi

  ui_box "üìã MISSION √Ä VALIDER" "$validation_content" "#FFA500"

  echo
  if ui_confirm "Avez-vous termin√© cette mission avec succ√®s ?"; then
    mission_complete_success "$activity" "$difficulty" $elapsed
  else
    ui_info "Mission marqu√©e comme non termin√©e."

    if [[ $elapsed -ge $duration ]]; then
      ui_warning "Temps imparti d√©pass√©. Application des p√©nalit√©s..."
      mission_complete_failure "$activity" "$difficulty"
    else
      ui_info "Mission annul√©e (dans les temps). Pas de p√©nalit√©."
      mission_cancel
    fi
  fi
}

mission_complete_success() {
  local activity=$1
  local difficulty=$2
  local elapsed=$3

  # Marquer comme compl√©t√©e
  config_complete_mission

  # Mettre √† jour les statistiques
  stats_record_completion "$activity" true "$difficulty"

  # Nettoyer
  config_clear_mission

  # Afficher le succ√®s
  ui_success "üéâ Mission termin√©e avec succ√®s !"

  local time_saved=""
  local mission_data
  mission_data=$(config_get_current_mission)
  local duration
  duration=$(echo "$mission_data" | jq -r '.duration // 0')

  if [[ $elapsed -lt $duration ]]; then
    local saved=$((duration - elapsed))
    time_saved=" ($(format_time $saved) d'avance !)"
  fi

  ui_box "‚úÖ SUCC√àS" \
    "Mission: $activity|Difficult√©: $difficulty|Temps: $(format_time $elapsed)$time_saved||üèÜ Bien jou√© !" \
    "#00FF00"

  ui_wait
}

mission_complete_failure() {
  local activity=$1
  local difficulty=$2

  # Marquer comme √©chou√©e
  config_fail_mission

  # Mettre √† jour les statistiques
  stats_record_completion "$activity" false "$difficulty"

  # Nettoyer la mission
  config_clear_mission

  # Appliquer une p√©nalit√©
  punishment_apply_random

  ui_wait
}

mission_cancel() {
  config_clear_mission
  ui_info "Mission annul√©e."
}

mission_get_random_difficulty() {
  local random_index=$((RANDOM % ${#DIFFICULTIES[@]}))
  echo "${DIFFICULTIES[$random_index]}"
}

mission_get_status() {
  local mission_data
  mission_data=$(config_get_current_mission)

  if [[ "$mission_data" == "null" ]] || [[ -z "$mission_data" ]]; then
    echo "no_mission"
    return 0
  fi

  local activity difficulty start_time duration status
  activity=$(echo "$mission_data" | jq -r '.activity')
  difficulty=$(echo "$mission_data" | jq -r '.difficulty')
  start_time=$(echo "$mission_data" | jq -r '.start_time')
  duration=$(echo "$mission_data" | jq -r '.duration')
  status=$(echo "$mission_data" | jq -r '.status // "active"')

  local current_time elapsed remaining
  current_time=$(date +%s)
  elapsed=$((current_time - start_time))
  remaining=$((duration - elapsed))

  echo "status:$status"
  echo "activity:$activity"
  echo "difficulty:$difficulty"
  echo "elapsed:$elapsed"
  echo "remaining:$remaining"
  echo "duration:$duration"
}

mission_emergency_cancel() {
  local mission_data
  mission_data=$(config_get_current_mission)

  if [[ "$mission_data" == "null" ]] || [[ -z "$mission_data" ]]; then
    ui_error "Aucune mission active √† annuler"
    return 1
  fi

  ui_warning "üö® ANNULATION D'URGENCE"
  ui_warning "Cette action stoppera imm√©diatement la mission actuelle."
  echo

  if ui_confirm "√ätes-vous s√ªr ? Cette action ne peut pas √™tre annul√©e."; then
    config_clear_mission
    ui_success "Mission annul√©e en urgence."
    ui_info "Aucune p√©nalit√© appliqu√©e pour cette annulation d'urgence."
  else
    ui_info "Annulation d'urgence annul√©e."
  fi
}
