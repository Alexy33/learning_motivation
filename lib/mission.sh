#!/bin/bash

# ============================================================================
# Mission Module - Gestion des missions avec th√®mes refactoris√©s
# ============================================================================

readonly DIFFICULTIES=("Easy" "Medium" "Hard")

# ============================================================================
# NOUVEAUX TH√àMES REFACTORIS√âS - Plus pr√©cis et concentr√©s
# ============================================================================

# =========================
# üìö DOCUMENTATION CVE
# =========================
declare -A CVE_THEMES_EASY=(
  ["1"]="Documenter CVE-2024-4577 (RCE PHP-CGI)"
  ["2"]="Analyser CVE-2024-3094 (Backdoor XZ Utils)"
  ["3"]="√âtudier CVE-2024-6387 (RegreSSHion OpenSSH)"
  ["4"]="Documenter CVE-2024-4323 (RCE Cacti)"
  ["5"]="Analyser CVE-2024-5535 (LFI OpenVPN)"
  ["6"]="√âtudier CVE-2024-27348 (RCE Apache HugeGraph)"
  ["7"]="Documenter CVE-2024-6778 (SQLi WordPress)"
  ["8"]="Analyser CVE-2024-7029 (XXE Strapi CMS)"
  ["9"]="√âtudier CVE-2024-8796 (CSRF Joomla)"
  ["10"]="Documenter CVE-2024-9143 (XSS Drupal)"
  ["11"]="Analyser CVE-2024-6923 (Directory Traversal NextCloud)"
  ["12"]="√âtudier CVE-2024-8190 (Deserialization GitLab)"
)

declare -A CVE_THEMES_MEDIUM=(
  ["1"]="Cr√©er un POC pour CVE-2024-21887 (Ivanti Connect)"
  ["2"]="Analyser la cha√Æne d'attaque CVE-2024-4040 (CrushFTP)"
  ["3"]="Documenter l'exploitation CVE-2024-5910 (Palo Alto)"
  ["4"]="Cr√©er un script d'exploit pour CVE-2024-6670 (Atlassian)"
  ["5"]="Analyser l'impact CVE-2024-7593 (Zimbra RCE)"
  ["6"]="Documenter le bypass CVE-2024-8956 (SonicWall)"
  ["7"]="Cr√©er un POC CVE-2024-9680 (Mozilla Firefox)"
  ["8"]="Analyser CVE-2024-43044 (Jenkins Pipeline)"
  ["9"]="Documenter CVE-2024-8963 (VMware vCenter)"
  ["10"]="Cr√©er exploit CVE-2024-7348 (PostgreSQL RCE)"
  ["11"]="Analyser CVE-2024-6387 avec m√©tasploit"
  ["12"]="Documenter CVE-2024-9014 (Fortinet FortiOS)"
  ["13"]="Cr√©er POC CVE-2024-8698 (Apache Solr)"
  ["14"]="Analyser CVE-2024-7519 (Kubernetes escape)"
  ["15"]="Documenter CVE-2024-8872 (Docker breakout)"
)

declare -A CVE_THEMES_HARD=(
  ["1"]="D√©velopper un exploit complet pour CVE-2024-4577"
  ["2"]="Cr√©er un framework d'exploitation CVE-2024-3094"
  ["3"]="Analyser et reproduire la supply chain attack XZ"
  ["4"]="D√©velopper un payload custom pour CVE-2024-6387"
  ["5"]="Cr√©er un kit d'exploitation multi-OS CVE-2024-21887"
  ["6"]="Analyser les techniques d'√©vasion CVE-2024-4040"
  ["7"]="D√©velopper un worm bas√© sur CVE-2024-5910"
  ["8"]="Cr√©er un rootkit exploitant CVE-2024-6670"
  ["9"]="Analyser l'APT29 utilisant CVE-2024-7593"
  ["10"]="D√©velopper un exploit 0-click CVE-2024-8956"
  ["11"]="Cr√©er une backdoor persistante CVE-2024-9680"
  ["12"]="Analyser le groupe Lazarus et CVE-2024-43044"
  ["13"]="D√©velopper un exploit de container escape"
  ["14"]="Cr√©er un framework d'attaque cloud native"
  ["15"]="Analyser une campagne APT compl√®te r√©cente"
)

# =========================
# üîß D√âVELOPPEMENT TOOLS
# =========================
declare -A TOOLS_THEMES_EASY=(
  ["1"]="Cr√©er un script de scan de ports en Python"
  ["2"]="D√©velopper un g√©n√©rateur de wordlists personnalis√©"
  ["3"]="Coder un parser de logs Apache/Nginx"
  ["4"]="Cr√©er un outil de v√©rification SSL/TLS"
  ["5"]="D√©velopper un scanner de subdomain en Go"
  ["6"]="Coder un analyseur de headers HTTP"
  ["7"]="Cr√©er un outil de d√©tection de CMS"
  ["8"]="D√©velopper un g√©n√©rateur de payloads XSS"
  ["9"]="Coder un scanner de vuln√©rabilit√©s WordPress"
  ["10"]="Cr√©er un outil d'extraction de m√©tadonn√©es"
  ["11"]="D√©velopper un parseur de certificats X.509"
  ["12"]="Coder un scanner de services SMB"
  ["13"]="Cr√©er un outil de bruteforce SSH optimis√©"
  ["14"]="D√©velopper un analyseur de trafic DNS"
  ["15"]="Coder un d√©tecteur de technologie web"
)

declare -A TOOLS_THEMES_MEDIUM=(
  ["1"]="D√©velopper un fuzzer HTTP intelligent"
  ["2"]="Cr√©er un outil de pivoting r√©seau automatis√©"
  ["3"]="Coder un framework de post-exploitation"
  ["4"]="D√©velopper un scanner de vuln√©rabilit√©s Docker"
  ["5"]="Cr√©er un outil d'analyse de firmware IoT"
  ["6"]="Coder un d√©tecteur de malware statique"
  ["7"]="D√©velopper un outil de OSINT automatis√©"
  ["8"]="Cr√©er un scanner de configuration cloud"
  ["9"]="Coder un analyseur de protocoles r√©seau"
  ["10"]="D√©velopper un outil de d√©tection d'intrusion"
  ["11"]="Cr√©er un framework de social engineering"
  ["12"]="Coder un outil d'analyse de blockchain"
  ["13"]="D√©velopper un scanner de vuln√©rabilit√©s API"
  ["14"]="Cr√©er un outil de reverse engineering automatis√©"
  ["15"]="Coder un syst√®me de honeypot intelligent"
  ["16"]="D√©velopper un outil d'√©vasion d'antivirus"
  ["17"]="Cr√©er un analyseur de malware dynamique"
  ["18"]="Coder un outil de privilege escalation"
)

declare -A TOOLS_THEMES_HARD=(
  ["1"]="D√©velopper un syst√®me d'exploitation d√©di√© pentest"
  ["2"]="Cr√©er un framework d'exploitation multi-plateforme"
  ["3"]="Coder un moteur de d√©tection de 0-day"
  ["4"]="D√©velopper un syst√®me de C2 furtif"
  ["5"]="Cr√©er un outil d'analyse comportementale avanc√©e"
  ["6"]="Coder un framework de machine learning pour la s√©curit√©"
  ["7"]="D√©velopper un syst√®me de threat hunting automatis√©"
  ["8"]="Cr√©er un outil de cryptanalyse moderne"
  ["9"]="Coder un syst√®me de d√©tection d'APT"
  ["10"]="D√©velopper un framework de red team automation"
  ["11"]="Cr√©er un syst√®me d'intelligence artificielle d√©fensive"
  ["12"]="Coder un outil d'analyse de supply chain"
  ["13"]="D√©velopper un syst√®me de sandbox avanc√©"
  ["14"]="Cr√©er un framework de bug bounty automatis√©"
  ["15"]="Coder un syst√®me de corr√©lation de menaces"
  ["16"]="D√©velopper un outil d'analyse de protocoles propri√©taires"
  ["17"]="Cr√©er un syst√®me de d√©ception technology"
  ["18"]="Coder un framework d'analyse de comportement utilisateur"
)

# =========================
# üéØ REVERSE ENGINEERING
# =========================
declare -A REVERSE_THEMES_EASY=(
  ["1"]="Analyser un crackme basique x86"
  ["2"]="Reverse d'un algorithme de chiffrement simple"
  ["3"]="D√©bugger un programme prot√©g√© par UPX"
  ["4"]="Analyser un keylogger Windows simple"
  ["5"]="Reverse d'une application Android basique"
  ["6"]="D√©bugger un driver Windows simple"
  ["7"]="Analyser un ransomware √©ducatif"
  ["8"]="Reverse d'un protocole r√©seau custom"
  ["9"]="D√©bugger un rootkit userland"
  ["10"]="Analyser un loader de malware basique"
  ["11"]="Reverse d'un firmware router simple"
  ["12"]="D√©bugger une application .NET obfusqu√©e"
  ["13"]="Analyser un trojan bancaire simple"
  ["14"]="Reverse d'un challenge de CTF classique"
  ["15"]="D√©bugger une biblioth√®que cryptographique"
)

declare -A REVERSE_THEMES_MEDIUM=(
  ["1"]="Analyser le malware Emotet r√©cent"
  ["2"]="Reverse du ransomware LockBit"
  ["3"]="D√©bugger le rootkit Gootkit"
  ["4"]="Analyser le trojan QakBot"
  ["5"]="Reverse du loader Bumblebee"
  ["6"]="D√©bugger le stealer RedLine"
  ["7"]="Analyser le backdoor Cobalt Strike"
  ["8"]="Reverse du malware IcedID"
  ["9"]="D√©bugger le trojan TrickBot"
  ["10"]="Analyser le dropper Dridex"
  ["11"]="Reverse du ransomware BlackCat"
  ["12"]="D√©bugger le malware Formbook"
  ["13"]="Analyser le rootkit Zacinlo"
  ["14"]="Reverse du banking trojan Zeus"
  ["15"]="D√©bugger le malware Ursnif"
  ["16"]="Analyser le backdoor PlugX"
  ["17"]="Reverse du stealer AZORult"
  ["18"]="D√©bugger le trojan Hancitor"
)

declare -A REVERSE_THEMES_HARD=(
  ["1"]="Analyser une APT sophistiqu√©e (Lazarus/APT29)"
  ["2"]="Reverse d'un implant nation-state"
  ["3"]="D√©bugger un hypervisor rootkit"
  ["4"]="Analyser un bootkit UEFI"
  ["5"]="Reverse d'un malware polymorphe avanc√©"
  ["6"]="D√©bugger un rootkit kernel mode avanc√©"
  ["7"]="Analyser un malware utilisant l'IA"
  ["8"]="Reverse d'un firmware compromis"
  ["9"]="D√©bugger un malware multi-architecture"
  ["10"]="Analyser une supply chain attack complexe"
  ["11"]="Reverse d'un malware cloud-native"
  ["12"]="D√©bugger un implant IoT sophistiqu√©"
  ["13"]="Analyser un malware utilisant la blockchain"
  ["14"]="Reverse d'un rootkit hyperviseur"
  ["15"]="D√©bugger un malware quantique-resistant"
  ["16"]="Analyser un APT utilisant l'OSINT"
  ["17"]="Reverse d'un malware memory-only"
  ["18"]="D√©bugger un living-off-the-land attack"
)

# =========================
# üïµÔ∏è INVESTIGATION DIGITALE
# =========================
declare -A FORENSICS_THEMES_EASY=(
  ["1"]="Analyser un dump m√©moire Windows suspect"
  ["2"]="Investiguer des logs de connexion SSH"
  ["3"]="Examiner un disque dur compromis"
  ["4"]="Analyser le trafic r√©seau d'une attaque"
  ["5"]="Investiguer des art√©facts de navigateur"
  ["6"]="Examiner des logs d'√©v√©nements Windows"
  ["7"]="Analyser une image Docker suspecte"
  ["8"]="Investiguer des m√©tadonn√©es de fichiers"
  ["9"]="Examiner des traces de malware Android"
  ["10"]="Analyser des logs de serveur web compromis"
  ["11"]="Investiguer une timeline d'attaque"
  ["12"]="Examiner des art√©facts de persistance"
  ["13"]="Analyser des dumps de processus malveillants"
  ["14"]="Investiguer des traces de lateral movement"
  ["15"]="Examiner des logs de base de donn√©es"
)

declare -A FORENSICS_THEMES_MEDIUM=(
  ["1"]="Reconstituer une attaque APT compl√®te"
  ["2"]="Analyser un incident de ransomware"
  ["3"]="Investiguer une compromission cloud AWS"
  ["4"]="Examiner une attaque sur infrastructure critique"
  ["5"]="Analyser un vol de donn√©es massif"
  ["6"]="Investiguer une compromission de domaine AD"
  ["7"]="Examiner une attaque supply chain"
  ["8"]="Analyser un incident sur environnement Kubernetes"
  ["9"]="Investiguer une fraude financi√®re cyber"
  ["10"]="Examiner une attaque sur syst√®me SCADA"
  ["11"]="Analyser un cas d'espionnage industriel"
  ["12"]="Investiguer une compromission mobile enterprise"
  ["13"]="Examiner une attaque sur blockchain"
  ["14"]="Analyser un incident IoT critique"
  ["15"]="Investiguer une manipulation d'IA/ML"
  ["16"]="Examiner une attaque sur 5G/Edge computing"
  ["17"]="Analyser un incident de deepfake malveillant"
  ["18"]="Investiguer une compromission de satellite"
)

declare -A FORENSICS_THEMES_HARD=(
  ["1"]="Analyser l'attribution d'une cyberattaque nation-state"
  ["2"]="Investiguer une op√©ration de d√©sinformation complexe"
  ["3"]="Examiner une attaque multi-vectorielle sophistiqu√©e"
  ["4"]="Analyser une compromission de r√©seau air-gapped"
  ["5"]="Investiguer une manipulation d'√©lection"
  ["6"]="Examiner une attaque sur infrastructure spatiale"
  ["7"]="Analyser une compromission de v√©hicule autonome"
  ["8"]="Investiguer une attaque sur r√©seau √©lectrique"
  ["9"]="Examiner une manipulation de march√© financier"
  ["10"]="Analyser une attaque sur syst√®me m√©dical critique"
  ["11"]="Investiguer une compromission d'usine intelligente"
  ["12"]="Examiner une attaque sur intelligence artificielle"
  ["13"]="Analyser une manipulation de donn√©es scientifiques"
  ["14"]="Investiguer une attaque sur r√©seau quantique"
  ["15"]="Examiner une compromission de smart city"
  ["16"]="Analyser une attaque sur infrastructure 6G"
  ["17"]="Investiguer une manipulation de r√©alit√© augment√©e"
  ["18"]="Examiner une compromission de brain-computer interface"
)

# ============================================================================
# V√©rification de mission unique (inchang√©)
# ============================================================================

mission_check_unique() {
  local mission_data
  mission_data=$(config_get_current_mission)

  if [[ "$mission_data" != "null" ]] && [[ -n "$mission_data" ]]; then
    local activity difficulty start_time duration
    activity=$(echo "$mission_data" | jq -r '.activity')
    difficulty=$(echo "$mission_data" | jq -r '.difficulty // "Unknown"')
    start_time=$(echo "$mission_data" | jq -r '.start_time')
    duration=$(echo "$mission_data" | jq -r '.duration')

    local current_time elapsed remaining
    current_time=$(date +%s)
    elapsed=$((current_time - start_time))
    remaining=$((duration - elapsed))

    ui_error "Mission d√©j√† en cours !"
    echo

    if [[ $remaining -gt 0 ]]; then
      local remaining_formatted
      remaining_formatted=$(format_time $remaining)
      ui_current_mission "$activity" "$difficulty" "$remaining_formatted"
    else
      ui_warning "‚è∞ Mission en cours (temps √©coul√©)"
      ui_current_mission "$activity" "$difficulty" "TEMPS √âCOUL√â"
    fi

    echo
    ui_info "Terminez d'abord votre mission actuelle avec 'Terminer la mission'"
    ui_info "Ou utilisez un joker via 'Urgence & Jokers'"

    return 1
  fi

  return 0
}

mission_check_unique_silent() {
  local mission_data
  mission_data=$(config_get_current_mission)

  if [[ "$mission_data" != "null" ]] && [[ -n "$mission_data" ]]; then
    return 1 # Mission en cours
  fi
  return 0 # Pas de mission
}

# ============================================================================
# G√©n√©ration de missions par type (REFACTORIS√â)
# ============================================================================

mission_create() {
  local activity=$1

  # V√©rifier qu'aucune mission n'est en cours
  if ! mission_check_unique; then
    return 1
  fi

  case "$activity" in
  "Challenge TryHackMe")
    mission_create_tryhackme
    ;;
  "Documentation CVE")
    mission_create_themed "CVE" "Documentation CVE"
    ;;
  "D√©veloppement Tools")
    mission_create_themed "TOOLS" "D√©veloppement Tools"
    ;;
  "Reverse Engineering")
    mission_create_themed "REVERSE" "Reverse Engineering"
    ;;
  "Investigation Digitale")
    mission_create_themed "FORENSICS" "Investigation Digitale"
    ;;
  *)
    ui_error "Type d'activit√© non support√©: $activity"
    return 1
    ;;
  esac
}

mission_create_tryhackme() {
  # Pour TryHackMe, syst√®me al√©atoire classique sans th√®me
  local difficulty
  difficulty=$(mission_get_random_difficulty)

  local duration
  duration=$(config_get_duration "$difficulty")

  local time_formatted
  time_formatted=$(format_time "$duration")

  echo
  ui_mission_box "Challenge TryHackMe" "$difficulty" "$time_formatted"
  echo

  local choice
  choice=$(gum choose \
    --cursor="‚û§ " \
    --selected.foreground="#00ff00" \
    "‚úÖ Accepter cette mission" \
    "üîÑ Reg√©n√©rer (al√©atoire)" \
    "‚ùå Retour au menu")

  case "$choice" in
  *"Accepter"*)
    mission_start "Challenge TryHackMe" "$difficulty" "$duration" ""
    ;;
  *"Reg√©n√©rer"*)
    ui_info "Nouvelle mission g√©n√©r√©e..."
    sleep 1
    mission_create_tryhackme
    ;;
  *"Retour"*)
    return 0
    ;;
  esac
}

mission_create_themed() {
  local theme_type=$1
  local activity_name=$2

  echo
  echo -e "${CYAN}Choisissez la difficult√© pour $activity_name :${NC}"
  echo

  local difficulty
  difficulty=$(gum choose \
    --cursor="‚û§ " \
    --selected.foreground="#00ff00" \
    "Easy (2h)" \
    "Medium (3h)" \
    "Hard (4h)" \
    "‚Ü©Ô∏è Retour au menu challenges")

  # G√©rer le retour
  if [[ "$difficulty" == *"Retour"* ]]; then
    return 0
  fi

  # Extraire la difficult√©
  local diff_level
  case "$difficulty" in
  "Easy (2h)") diff_level="Easy" ;;
  "Medium (3h)") diff_level="Medium" ;;
  "Hard (4h)") diff_level="Hard" ;;
  *)
    ui_error "Difficult√© non reconnue"
    return 1
    ;;
  esac

  # Afficher et choisir le th√®me
  mission_show_theme_choice "$theme_type" "$activity_name" "$diff_level"
}

mission_show_theme_choice() {
  local theme_type=$1
  local activity_name=$2
  local diff_level=$3

  # Obtenir un th√®me al√©atoire
  local theme
  theme=$(mission_get_random_theme "$theme_type" "$diff_level")

  local duration
  duration=$(config_get_duration "$diff_level")

  local time_formatted
  time_formatted=$(format_time "$duration")

  echo
  ui_themed_mission_box "$activity_name" "$diff_level" "$time_formatted" "$theme"
  echo

  local choice
  choice=$(gum choose \
    --cursor="‚û§ " \
    --selected.foreground="#00ff00" \
    "‚úÖ Accepter cette mission" \
    "üîÑ Nouveau th√®me (m√™me difficult√©)" \
    "üîÑ Changer de difficult√©" \
    "‚ùå Retour au menu")

  case "$choice" in
  *"Accepter"*)
    mission_start "$activity_name" "$diff_level" "$duration" "$theme"
    ;;
  *"Nouveau th√®me"*)
    ui_info "Nouveau th√®me g√©n√©r√©..."
    sleep 1
    mission_show_theme_choice "$theme_type" "$activity_name" "$diff_level"
    ;;
  *"Changer de difficult√©"*)
    mission_create_themed "$theme_type" "$activity_name"
    ;;
  *"Retour"*)
    return 0
    ;;
  esac
}

# ============================================================================
# Fonctions utilitaires unifi√©es
# ============================================================================

mission_get_random_difficulty() {
  local random_index=$((RANDOM % ${#DIFFICULTIES[@]}))
  echo "${DIFFICULTIES[$random_index]}"
}

mission_get_random_theme() {
  local theme_type=$1
  local difficulty=$2

  local -n themes_ref="${theme_type}_THEMES_${difficulty^^}"
  local theme_keys=(${!themes_ref[@]})
  local random_key=${theme_keys[$((RANDOM % ${#theme_keys[@]}))]}

  echo "${themes_ref[$random_key]}"
}

# ============================================================================
# D√©marrage des missions (inchang√©)
# ============================================================================

mission_start() {
  local activity=$1
  local difficulty=$2
  local duration=$3
  local theme=${4:-""}

  # Sauvegarder la mission avec le th√®me
  config_save_mission "$activity" "$difficulty" "$duration" "$theme"

  # Lancer le timer
  timer_start "$duration"

  # Affichage de confirmation
  ui_clear
  ui_header "Mission Lanc√©e"

  local time_formatted
  time_formatted=$(format_time "$duration")

  if [[ -n "$theme" ]]; then
    ui_box "üöÄ MISSION ACTIVE AVEC TH√àME" \
      "üìã $activity|‚ö° Difficult√©: $difficulty|‚è∞ Temps: $time_formatted||üéØ Th√®me: $theme||üí™ Bon travail !" \
      "#00FF00"
  else
    ui_box "üöÄ MISSION ACTIVE" \
      "üìã $activity|‚ö° Difficult√©: $difficulty|‚è∞ Temps: $time_formatted||üí™ Bon travail !" \
      "#00FF00"
  fi

  echo
  ui_success "Mission d√©marr√©e ! Timer en cours d'ex√©cution."
  ui_info "Revenez au menu principal pour suivre votre progression."

  ui_wait
}

# ============================================================================
# Affichage des missions (inchang√©)
# ============================================================================

mission_display_current() {
  local mission_data
  mission_data=$(config_get_current_mission)

  if [[ "$mission_data" == "null" ]] || [[ -z "$mission_data" ]]; then
    return 0
  fi

  local activity difficulty start_time duration status theme
  activity=$(echo "$mission_data" | jq -r '.activity')
  difficulty=$(echo "$mission_data" | jq -r '.difficulty')
  start_time=$(echo "$mission_data" | jq -r '.start_time')
  duration=$(echo "$mission_data" | jq -r '.duration')
  status=$(echo "$mission_data" | jq -r '.status // "active"')
  theme=$(echo "$mission_data" | jq -r '.theme // ""')

  if [[ "$status" == "active" ]]; then
    local current_time elapsed remaining
    current_time=$(date +%s)
    elapsed=$((current_time - start_time))
    remaining=$((duration - elapsed))

    if [[ $remaining -gt 0 ]]; then
      local remaining_formatted
      remaining_formatted=$(format_time $remaining)

      if [[ -n "$theme" && "$theme" != "null" ]]; then
        ui_current_mission_with_theme "$activity" "$difficulty" "$remaining_formatted" "$theme"
      else
        ui_current_mission "$activity" "$difficulty" "$remaining_formatted"
      fi
    else
      ui_warning "‚è∞ Temps √©coul√© ! Mission en attente de validation."
      echo
    fi
  fi
}

# ============================================================================
# Validation et compl√©tion (inchang√©)
# ============================================================================

mission_validate() {
  local mission_data
  mission_data=$(config_get_current_mission)

  if [[ "$mission_data" == "null" ]] || [[ -z "$mission_data" ]]; then
    ui_error "Aucune mission active √† valider"
    ui_wait
    return 1
  fi

  local activity difficulty start_time duration theme
  activity=$(echo "$mission_data" | jq -r '.activity')
  difficulty=$(echo "$mission_data" | jq -r '.difficulty')
  start_time=$(echo "$mission_data" | jq -r '.start_time')
  duration=$(echo "$mission_data" | jq -r '.duration')
  theme=$(echo "$mission_data" | jq -r '.theme // ""')

  local current_time elapsed remaining
  current_time=$(date +%s)
  elapsed=$((current_time - start_time))
  remaining=$((duration - elapsed))

  ui_header "Validation de Mission"

  local validation_content="Activit√©: $activity|Difficult√©: $difficulty|Temps √©coul√©: $(format_time $elapsed)"
  if [[ -n "$theme" && "$theme" != "null" ]]; then
    validation_content+="|Th√®me: $theme"
  fi

  # Affichage avec statut selon le temps
  if [[ $remaining -le 0 ]]; then
    ui_box "‚è∞ MISSION EN RETARD" "$validation_content|Temps imparti: D√âPASS√â de $(format_time $((elapsed - duration)))" "#FF0000"
  else
    ui_box "üìã MISSION √Ä VALIDER" "$validation_content|Temps restant: $(format_time $remaining)" "#FFA500"
  fi

  echo

  # Menu de validation avec avertissement si en retard
  local validation_options=()
  
  if [[ $remaining -le 0 ]]; then
    validation_options+=("‚úÖ Mission termin√©e avec succ√®s (malgr√© le retard)")
    validation_options+=("‚ùå Mission √©chou√©e/non termin√©e + P√âNALIT√â")
  else
    validation_options+=("‚úÖ Mission termin√©e avec succ√®s")
    validation_options+=("‚ùå Mission √©chou√©e/non termin√©e + P√âNALIT√â")
  fi
  
  validation_options+=("‚Ü©Ô∏è Retour au menu principal (sans valider)")

  local validation_choice
  validation_choice=$(gum choose \
    --cursor="‚û§ " \
    --selected.foreground="#00ff00" \
    "${validation_options[@]}")

  case "$validation_choice" in
    *"termin√©e avec succ√®s"*)
      mission_complete_success "$activity" "$difficulty" $elapsed $remaining
      ;;
    *"√©chou√©e/non termin√©e"*)
      mission_complete_failure "$activity" "$difficulty"
      ;;
    *"Retour"*)
      ui_info "Validation annul√©e. Mission toujours active."
      return 0
      ;;
  esac
}

mission_complete_success() {
  local activity=$1
  local difficulty=$2
  local elapsed=$3
  local remaining=${4:-0}

  # Marquer comme compl√©t√©e
  config_complete_mission

  # Mettre √† jour les statistiques
  stats_record_completion "$activity" true "$difficulty"

  # Nettoyer
  config_clear_mission

  # Afficher le succ√®s
  if [[ $remaining -le 0 ]]; then
    ui_warning "‚ö†Ô∏è Mission termin√©e en retard mais valid√©e comme succ√®s"
    ui_box "‚úÖ SUCC√àS (EN RETARD)" \
      "Mission: $activity|Difficult√©: $difficulty|Temps: $(format_time $elapsed)|Retard: $(format_time $((-remaining)))||üéØ Mission valid√©e malgr√© le d√©passement" \
      "#FFA500"
  else
    local time_saved=$((remaining))
    local time_saved_str=""
    if [[ $time_saved -gt 0 ]]; then
      time_saved_str=" ($(format_time $time_saved) d'avance !)"
    fi

    ui_success "üéâ Mission termin√©e avec succ√®s !"
    ui_box "‚úÖ SUCC√àS" \
      "Mission: $activity|Difficult√©: $difficulty|Temps: $(format_time $elapsed)$time_saved_str||üèÜ Excellent travail !" \
      "#00FF00"
  fi

  ui_wait
}

mission_complete_failure() {
  local activity=$1
  local difficulty=$2

  # Marquer comme √©chou√©e
  config_fail_mission

  # Mettre √† jour les statistiques
  stats_record_completion "$activity" false "$difficulty"

  # Nettoyer la mission
  config_clear_mission

  # Affichage de l'√©chec avec p√©nalit√©
  ui_error "üíÄ MISSION √âCHOU√âE - APPLICATION DE P√âNALIT√â"
  
  ui_box "üíÄ √âCHEC CONFIRM√â" \
    "Mission: $activity ($difficulty)|Statut: √âCHOU√âE|Cons√©quence: P√©nalit√© IMM√âDIATE||‚ö° Application en cours..." \
    "#FF0000"

  echo
  ui_warning "Une p√©nalit√© va √™tre appliqu√©e dans 3 secondes..."
  sleep 3

  # Appliquer une p√©nalit√©
  punishment_apply_random

  ui_wait
}