#!/bin/bash

# ============================================================================
# Learning Status - Affichage du statut des missions en cours
# ============================================================================

set -euo pipefail

# Configuration
readonly SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
readonly CONFIG_DIR="$HOME/.learning_challenge"
readonly LIB_DIR="$SCRIPT_DIR/lib"

# Import des modules
source "$LIB_DIR/config.sh"
source "$LIB_DIR/ui.sh"
source "$LIB_DIR/mission.sh"
source "$LIB_DIR/stats.sh"
source "$LIB_DIR/timer.sh"
source "$LIB_DIR/punishment.sh"

# ============================================================================
# Fonctions principales
# ============================================================================

show_detailed_status() {
    local mission_data
    mission_data=$(config_get_current_mission)
    
    if [[ "$mission_data" == "null" ]] || [[ -z "$mission_data" ]]; then
        ui_header "Statut des Missions"
        ui_info "üò¥ Aucune mission active"
        echo
        ui_info "Utilisez 'learning.sh' pour d√©marrer une nouvelle mission."
        echo
        
        # Afficher un r√©sum√© des stats
        show_quick_stats
        return 0
    fi
    
    # Afficher le statut d√©taill√© du timer
    timer_display_status
    
    echo
    ui_divider
    echo
    
    # Afficher les commandes disponibles
    ui_info "Commandes disponibles :"
    echo "  learning-check    : Valider la mission"
    echo "  learning-status   : Voir ce statut"
    echo "  learning-emergency: Annulation d'urgence"
    echo
    
    # Afficher les p√©nalit√©s actives s'il y en a
    punishment_list_active
}

show_quick_stats() {
    local total completed current_streak
    total=$(config_get '.total_missions' "$CONFIG_DIR/stats.json")
    completed=$(config_get '.completed' "$CONFIG_DIR/stats.json")
    current_streak=$(config_get '.current_streak' "$CONFIG_DIR/stats.json")
    
    ui_info "üìä R√©sum√© rapide :"
    echo "  Missions totales: $total"
    echo "  Compl√©t√©es: $completed"
    echo "  S√©rie actuelle: $current_streak"
}

show_simple_status() {
    # Version courte pour int√©gration dans des scripts
    local status_info
    status_info=$(mission_get_status)
    
    if [[ "$status_info" == "no_mission" ]]; then
        echo "IDLE"
        return 0
    fi
    
    local status activity remaining
    status=$(echo "$status_info" | grep "^status:" | cut -d: -f2)
    activity=$(echo "$status_info" | grep "^activity:" | cut -d: -f2)
    remaining=$(echo "$status_info" | grep "^remaining:" | cut -d: -f2)
    
    if [[ $remaining -le 0 ]]; then
        echo "OVERTIME:$activity"
    else
        local remaining_formatted
        remaining_formatted=$(format_time "$remaining")
        echo "ACTIVE:$activity:$remaining_formatted"
    fi
}

main() {
    # V√©rifier que la configuration existe
    if [[ ! -d "$CONFIG_DIR" ]]; then
        echo "NO_CONFIG"
        exit 1
    fi
    
    config_init
    
    # V√©rifier les arguments
    case "${1:-detailed}" in
        "simple"|"-s"|"--simple")
            show_simple_status
            ;;
        "quick"|"-q"|"--quick")
            show_quick_stats
            ;;
        "detailed"|"-d"|"--detailed"|"")
            show_detailed_status
            ;;
        "help"|"-h"|"--help")
            cat << EOF
Usage: learning-status [option]

Options:
  detailed, -d, --detailed    Affichage d√©taill√© (d√©faut)
  simple, -s, --simple        Affichage simple pour scripts
  quick, -q, --quick          R√©sum√© rapide des statistiques
  help, -h, --help            Afficher cette aide

Examples:
  learning-status              # Affichage d√©taill√©
  learning-status simple       # Status: ACTIVE:TryHackMe:1h30m
  learning-status quick        # Statistiques rapides
EOF
            ;;
        *)
            ui_error "Option inconnue: $1"
            ui_info "Utilisez 'learning-status help' pour voir les options disponibles"
            exit 1
            ;;
    esac
}

# Point d'entr√©e
main "$@"
